// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Fixtures.ModelFlattening.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The product documentation.
    /// </summary>
    public partial class SimpleProduct : BaseProduct
    {
        /// <summary>
        /// Initializes a new instance of the SimpleProduct class.
        /// </summary>
        public SimpleProduct()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SimpleProduct class.
        /// </summary>
        /// <param name="productId">Unique identifier representing a specific
        /// product for a given latitude &amp; longitude. For example, uberX in
        /// San Francisco will have a different product_id than uberX in Los
        /// Angeles.</param>
        /// <param name="description">Description of product.</param>
        public SimpleProduct(string productId, string description = default(string), SimpleProductProperties details = default(SimpleProductProperties))
            : base(productId, description)
        {
            Details = details;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "details")]
        public SimpleProductProperties Details { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (Details != null)
            {
                Details.Validate();
            }
        }
    }
}
